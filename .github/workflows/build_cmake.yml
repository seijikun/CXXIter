name: CMake Build Matrix

on: [push, pull_request]

jobs:
  build_and_test:
    name: "${{ matrix.config.type }} - ${{ matrix.config.version }} (${{ matrix.config.buildType }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
        - { type: "gcc", cc: "gcc", cxx: "g++", buildType: "Release", version: 11, platform: x64 }
        - { type: "gcc", cc: "gcc", cxx: "g++", buildType: "Debug", version: 11, platform: x64 }
        - { type: "clang", cc: "clang", cxx: "clang++", buildType: "Release", version: 13, platform: x64 }
        - { type: "clang", cc: "clang", cxx: "clang++", buildType: "Debug", version: 13, platform: x64 }
        - { type: "clang", cc: "clang", cxx: "clang++", buildType: "Release", version: 14, platform: x64 }
        - { type: "clang", cc: "clang", cxx: "clang++", buildType: "Debug", version: 14, platform: x64 }

    steps:
    - uses: actions/checkout@v2
    
    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -yq libgtest-dev libgmock-dev libbenchmark-dev cmake ninja-build
    - name: Setup GCC
      uses: egor-tensin/setup-gcc@v1
      if: matrix.config.type == 'gcc'
      with:
        version: ${{ matrix.config.version }}
        platform: ${{ matrix.config.platform }}
    - name: Setup CLANG
      uses: egor-tensin/setup-clang@v1
      if: matrix.config.type == 'clang'
      with:
        version: ${{ matrix.config.version }}
        platform: ${{ matrix.config.platform }}
      
    - name: Configure
      run: |
        export CC=${{ matrix.config.cc }}
        export CXX=${{ matrix.config.cxx }}
        if [ -d "build" ]; then rm -rf ./build; fi
        mkdir -p build
        cd build
        cmake -GNinja ../ -DCXXITER_WITH_TESTS=ON -DCMAKE_BUILD_TYPE=${{ matrix.config.buildType }}
    
    - name: Build
      run: |
        cd build/
        cmake --build .
        
    - name: Test
      run: |
        cd build/
        ctest -j4 --output-on-failure
